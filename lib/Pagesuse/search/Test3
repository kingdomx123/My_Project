import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

class OrderManagementScreen extends StatefulWidget {
  @override
  _OrderManagementScreenState createState() => _OrderManagementScreenState();
}

class _OrderManagementScreenState extends State<OrderManagementScreen> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Order Management'),
      ),
      body: StreamBuilder(
        stream: FirebaseFirestore.instance.collection('orders').snapshots(),
        builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {
          if (!snapshot.hasData) {
            return Center(child: CircularProgressIndicator());
          }
          final orders = snapshot.data!.docs;

          return ListView(
            children: orders.map((doc) {
              return ListTile(
                title: Text(doc['name']),
                subtitle: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text('Quantity: ${doc['quantity']}'),
                    Text('Total Price: \$${doc['price'] * doc['quantity']}'),
                    Text('Status: ${doc['status']}'),
                  ],
                ),
                trailing: SizedBox(
                  width: 120, // กำหนดขนาดให้กับ trailing widget
                  child: _buildActionButton(doc),
                ),
              );
            }).toList(),
          );
        },
      ),
    );
  }

  Widget _buildActionButton(DocumentSnapshot doc) {
    String status = doc['status'];

    if (status == 'pending') {
      return ElevatedButton(
        onPressed: () {
          _updateOrderStatus(doc.id, 'approved');
        },
        child: Text('Approve'),
      );
    } else if (status == 'approved') {
      return ElevatedButton(
        onPressed: () {
          _updateOrderStatus(doc.id, 'completed');
        },
        child: Text('Complete'),
      );
    } else {
      return Container(); // No action needed for completed orders
    }
  }

  void _updateOrderStatus(String orderId, String newStatus) {
    FirebaseFirestore.instance.collection('orders').doc(orderId).update({
      'status': newStatus,
      '${newStatus}At': FieldValue.serverTimestamp(),
    });

    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text('Order status updated to $newStatus')),
    );
  }
}
